process SIMANDSISTRIPDQM = {

  # MessageLogger
  include "FWCore/MessageLogger/data/MessageLogger.cfi"

  # magnetic field
  include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

  # geometry (switched to tracker only geometry)
  include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"

  # tracker geometry
  include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"

  #
  es_module = TrackerGeometricDetESModule {}

  # tracer service - very verbose - useful for debugging only
#  service = Tracer { untracked string indention = "$$"}

  #=========================================================================================
  # source of simulated hits - generate them here
  service = RandomNumberGeneratorService
  {
     untracked uint32 sourceSeed = 98765
  }

  # this will run single/multi particle pt-gun
  # the pt of the particles with be uniformly
  # distributed in the user-specied pt-range 
  # particles (HepMCPRoduct) will be placed 
  # into edm::Event 
   source = FlatRandomPtGunSource 
   { 
     untracked uint32 firstRun  =  1
     untracked int32  maxEvents = 2000
     untracked PSet  PGunParameters =
     {
       # you can request more than 1 particle
       #untracked vint32  PartID = { 211, 11, -13 }
       untracked vint32 PartID = {211} 
       untracked double MinEta = 1.
       untracked double MaxEta = 1.5
       #
       # phi must be given in radians
       #
       untracked double MinPhi = -3.14159265358979323846
       untracked double MaxPhi =  3.14159265358979323846
       untracked double MinPt  =  9.99
       untracked double MaxPt  = 10.01
     }
     untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
   }

   # Geant4-based CMS Det.Simulation
   include "SimG4Core/Application/data/SimG4Object.cfi" 

#    module EventContentAnalyzer = EventContentAnalyzer {}

  module out = PoolOutputModule 
  { 
    untracked string fileName = "FlatPtSimHits.root"
  }


    path p = {
              g4SimHits # detector simulation
              }

   endpath e = {out} # write out the simulated hits in a file

}
