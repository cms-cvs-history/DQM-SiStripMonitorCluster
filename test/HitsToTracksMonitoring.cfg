# this cfg will run the reconstruction of:
# digis (strips+pixels), clusters (strips+pixels), rechits (strips+pixels),
# seeds, clouds, trackcandidates, tracks

process HitsToTracksMonitoring = 
{

    # initialize  MessageLogger
    include "FWCore/MessageLogger/data/MessageLogger.cfi"
    
    # initialize magnetic field
    include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
    
    # tracker geometry
    #include "Geometry/TrackerRecoData/data/trackerRecoGeometryXML.cfi"
    
    # tracker geometry
    include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
    
    # tracker numbering
    include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
    
    # strip parameter estimator service for SiStripRecHitConverter
    include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"
    
    service = RandomNumberGeneratorService
    {
	untracked uint32 sourceSeed = 98765
    }
    
    #  service = Timing {}
    
    include "SimGeneral/HepPDTESSource/data/pdt.cfi"
    
    source = FlatRandomPtGunSource
    {
	untracked uint32 firstRun = 1
	untracked int32 maxEvents = 1
	untracked PSet PGunParameters =
	{
	    # you can request more than 1 particle
	    untracked vint32  PartID = {13}
	    untracked double MinEta = -2.5
	    untracked double MaxEta =  2.5
	    untracked double MinPhi = -3.14159265358979323846 # in radians
	    untracked double MaxPhi =  3.14159265358979323846
	    untracked double MinPt  =  9.99
	    untracked double MaxPt  = 10.01
	}
	untracked int32 Verbosity = 1 # set to 1 (or greater)  for printouts
    }
    
    # include geant4 simulation
    include "SimG4Core/Application/data/SimG4Object.cfi"
    #replace SimG4Object.Physics.type = "SimG4Core/Physics/DummyPhysics"
    #replace SimG4Object.Physics.DummyEMPhysics = true
    
    #  source = PoolSource 
    #  { 
    #    untracked vstring fileNames = {"file:sim+local+global10GeV.root"}
    #    untracked int32 maxEvents = -1
    #  }
    
    # include SiStripDigitizer
    include "SimTracker/SiStripDigitizer/data/SiStripDigi.cfi"
    
    # include SiPixelDigitizer
    include "SimTracker/SiPixelDigitizer/data/PixelDigi.cfi"
    
    module mix = MixingModule
    {
	int32 bunchspace = 25
    }
    
    # include  pixClust
    include "RecoLocalTracker/SiPixelClusterizer/data/SiPixelClusterizer.cfi"
    
    # include SiStripClusterizer
    include "RecoLocalTracker/SiStripClusterizer/data/SiStripClusterizer.cfi"
    
    #include pixRecHitConverter
    include "RecoLocalTracker/SiPixelRecHits/data/SiPixelRecHits.cfi" 
    
    # include SiStripRecHitConverter
    include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitConverter.cfi"
    include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitMatcher.cfi"
    
    # GlobalMixedSeedGenerator
    include "RecoTracker/TkSeedGenerator/data/GlobalMixedSeeds.cff"
    
    # RoadSearchSeedFinder
    include "RecoTracker/RoadSearchSeedFinder/data/RoadSearchSeeds.cff"
    
    # KFTrackCandidateMaker
    include "RecoTracker/CkfPattern/data/CkfTrackCandidates.cff"
    
    # RoadSearchCloudMaker
    include "RecoTracker/RoadSearchCloudMaker/data/RawRoadSearchClouds.cff"
    
    # RoadSearchCloudMaker
    include "RecoTracker/RoadSearchCloudCleaner/data/CleanRoadSearchClouds.cff"
    
    # RoadSearchTrackCandidateMaker
    include "RecoTracker/RoadSearchTrackCandidateMaker/data/RoadSearchTrackCandidates.cff"
    
    # CTF analytical track fit
    include "RecoTracker/TrackProducer/data/CTFFinalFitAnalytical.cff"
    
    # CTF track fit with material
    include "RecoTracker/TrackProducer/data/CTFFinalFitWithMaterial.cff"
    
    # RS analytical track fit
    include "RecoTracker/TrackProducer/data/RSFinalFitAnalytical.cff"
    
    # RS track fit with material 
    include "RecoTracker/TrackProducer/data/RSFinalFitWithMaterial.cff"

    module EventContentAnalyzer = EventContentAnalyzer {}

    # DQM services
    service = DaqMonitorROOTBackEnd{}

    # MonitorTrackGlobal
    include "DQM/TrackerMonitorTrack/data/MonitorTrackGlobal.cfi"
    replace MonitorTrackGlobal.TrackProducer = "rsWithMaterialTracks"

    # MonitorTrackResiduals
    include "DQM/TrackerMonitorTrack/data/MonitorTrackResiduals.cfi"
    replace MonitorTrackResiduals.OutputMEsInRootFile = true # the default setting is not to output MEs in file
    replace MonitorTrackResiduals.OutputFileName = "dqm_tracks.root" # the default setting is not to output MEs in file

    module out = PoolOutputModule 
    { 
      untracked string fileName = "reco_tracks.root"
    }

    # get SiStripFedCabling from sqlite_file
      es_source pool1 = PoolDBESSource
      {
           VPSet toGet = {
              { string record = "SiStripFedCablingRcd" string tag = "SiStripFedCabling_v1"}}

           bool loadAll = true
           string connect = "sqlite_file:sistripfedcabling.db"

           PSet DBParameters = {
             string timetype = "runnumber"
             untracked uint32 authenticationMethod = 1
             untracked uint32 messagelevel = 10
          }
      }

      # produce SiStripFecCabling and SiStripDetCabling out of SiStripFedCabling
      es_module sistripconn = SiStripConnectivity {}

#===================================================== scheduling

    sequence sim = 
    {
	g4SimHits,mix
    }

    sequence digi = {
	siStripDigis,
	siPixelDigis
    }
    
    sequence localreco = 
    {
	siPixelClusters,
	siStripClusters,
	siPixelRecHits,
	siStripMatchedRecHits
    }
    
    sequence ckf = 
    {
	globalMixedSeeds,
	ckfTrackCandidates,
	ctfAnalyticalTracks,
	ctfWithMaterialTracks
    }
    
    sequence rs = 
    {
	roadSearchSeeds,
	rawRoadSearchClouds,
	cleanRoadSearchClouds,
	rsTrackCandidates,
	rsAnalyticalTracks,
	rsWithMaterialTracks
    }

    sequence monitor =
    {
      MonitorTrackGlobal,
      MonitorTrackResiduals
    }

      path p = 
      {
        sim,
        digi,
        localreco,
        ckf,
        rs,
        EventContentAnalyzer,                  // show objects/collections in the event - verbose
        monitor
      }

    endpath e = { out }
}

