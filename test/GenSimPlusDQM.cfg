process GENSIMPLUSDQM = {

  # MessageLogger
  include "FWCore/MessageLogger/data/MessageLogger.cfi"

  # magnetic field
  include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

  # geometry (switched to tracker only geometry)
  include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"

  # tracker geometry
  include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"

  #
  es_module = TrackerGeometricDetESModule {}

  #=========================================================================================
  # source of simulated hits - generate them here
  service = RandomNumberGeneratorService
  {
     untracked uint32 sourceSeed = 98765
  }

  # this will run single/multi particle pt-gun
  # the pt of the particles with be uniformly
  # distributed in the user-specied pt-range 
  # particles (HepMCPRoduct) will be placed 
  # into edm::Event 
   source = FlatRandomPtGunSource 
   { 
     untracked uint32 firstRun  =  1
     untracked int32  maxEvents = 10
     untracked PSet  PGunParameters =
     {
       # you can request more than 1 particle
       #untracked vint32  PartID = { 211, 11, -13 }
       untracked vint32 PartID = {211} 
       untracked double MinEta = 1.
       untracked double MaxEta = 1.5
       #
       # phi must be given in radians
       #
       untracked double MinPhi = -3.14159265358979323846
       untracked double MaxPhi =  3.14159265358979323846
       untracked double MinPt  =  9.99
       untracked double MaxPt  = 10.01
     }
     untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
   }

   # Geant4-based CMS Det.Simulation
   include "SimG4Core/Application/data/SimG4Object.cfi" 
  #=========================================================================================

  # SiStripDigitizer
  include "SimTracker/SiStripDigitizer/data/SiStripDigi.cfi"

  # include SiStripClusterizer
  include "RecoLocalTracker/SiStripClusterizer/data/SiStripClusterizer.cfi"

  # get SiStripFedCabling from sqlite_file
    es_source pool1 = PoolDBESSource
    {
         VPSet toGet = {
            { string record = "SiStripFedCablingRcd"
              string tag = "SiStripFedCabling_v1"
            }
         }
         bool loadAll = true
         string connect = "sqlite_file:sistripfedcabling.db"
         untracked string catalog = "file:SiStripFedCablingCatalog.xml"
         string timetype = "runnumber"
         untracked uint32 authenticationMethod = 1
         untracked uint32 messagelevel = 10
    }

    # produce SiStripFecCabling and SiStripDetCabling out of SiStripFedCabling
    es_module sistripconn = SiStripConnectivity {}

    # DQM services
    service = DaqMonitorROOTBackEnd{}

    # tracer service - very verbose - useful for debugging only
#    service = Tracer { untracked string indention = "$$"}

    # can comment out MonitorDeamon if you want to run without DQMCollector - this should go as include in DQMServices
#    include "DQM/SiStripMonitorCluster/data/MonitorDaemon.cfi"
#    replace MonitorDaemon.DestinationAddress = "lxcmse1.cern.ch"

    # SiStripMonitorDigi
    include "DQM/SiStripMonitorDigi/data/SiStripMonitorDigi_SimData.cfi"
    # use the following flag to select all detectors (e.g. for mtcc data). by default is false
#    replace SiStripMonitorDigi.SelectAllDetectors = true
       
    # SiStripMonitorCluster
    include "DQM/SiStripMonitorCluster/data/SiStripMonitorCluster.cfi"
    # use the following flag to select all detectors (e.g. for mtcc data). by default is false
#    replace SiStripMonitorCluster.SelectAllDetectors = true
    replace SiStripMonitorCluster.OutputMEsInRootFile = true

#    module EventContentAnalyzer = EventContentAnalyzer {}

  module out = OutServ 
  { 
    untracked string setupLabel= "FlatPtSimHits"
    untracked string streamLabel= ""
  }

    path p = {
              SimG4Object,
              stripdigi,
              ThreeThresholdClusterizer,
              SiStripMonitorDigi,
              SiStripMonitorCluster
              }

#   endpath e = {out} # also write out the simulated hits in a file
}
