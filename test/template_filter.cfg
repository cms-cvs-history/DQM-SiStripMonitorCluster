# template file to be used for MTCC data, the script substitutes the list of files and similar
  process MTCCMONITORING = {
  
    # MessageLogger
    include "FWCore/MessageLogger/data/MessageLogger.cfi"
  #  include "DQM/SiStripCommon/data/MessageLogger.cfi"
  
    # magnetic field
  #  include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
  
    # geometry (switched to tracker only geometry)
  #  include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
  
    # tracker geometry
  #  include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
  
    #
  #  es_module = TrackerGeometricDetESModule {}
  
  
    # tracer service - very verbose - useful for debugging only
  #  service = Tracer { untracked string indention = "$$"}
  
    # source of simulated hits
  #  source = DQMSafePoolSource
  
  
    source = PoolSource
    {
     untracked vstring fileNames = {
              SCRIPT_LIST_OF_FILES
     }
     untracked int32 maxEvents = -1
     untracked uint32 debugVebosity = 1
     untracked bool   debugFlag     = true
    }
  
#  #read cabling from db
#  include "OnlineDB/SiStripESSources/data/BuildFedCablingUsingConfigDb.cfi"
#  replace BuildFedCablingUsingConfigDb.UsingDb = true
#  replace BuildFedCablingUsingConfigDb.User = "cms_mtcc_sitracker"
#  replace BuildFedCablingUsingConfigDb.Passwd = "cms_mtcc"
#  replace BuildFedCablingUsingConfigDb.Path = "omds"
#  #replace BuildFedCablingUsingConfigDb.Partition = "MTCC_DEMO"
#  replace BuildFedCablingUsingConfigDb.Partition = "MTCC_TESTCI_NEW"

      # DQM services
      service = DaqMonitorROOTBackEnd{}
  
      # tracer service - very verbose - useful for debugging only
  #    service = Tracer { untracked string indention = "$$"}
  
  # Trigger
       module ClusterMTCCFilter = ClusterMTCCFilter
       {
         string  ClusterProducer = "ThreeThresholdClusterizer"
         # thresholds
         int32 ChargeThresholdTIB = 25
         int32 ChargeThresholdTOB = 25
         int32 ChargeThresholdTEC = 70
         # at least 'MinClustersDiffComponents' sub-components (TIB1, TIB2, TIB3, TOB, TEC)
         # with clusters over above respective thresholds
         int32 MinClustersDiffComponents = 3
       }
  
  # Trigger Monitoring, SiStripMonitorHLT
  include "DQM/SiStripMonitorCluster/data/SiStripMonitorHLT.cfi"
  replace SiStripMonitorHLT.HLTProducer="ClusterMTCCFilter"
  replace SiStripMonitorHLT.OutputMEsInRootFile = true
  replace SiStripMonitorHLT.OutputFileName = "SCRIPT_DQM_OUTPUT_FILE"
  
  #  module EventContentAnalyzer = EventContentAnalyzer {}
  
  module out = PoolOutputModule 
    { 
      untracked string fileName = "SCRIPT_POOL_OUTPUT_FILE"
    }
  
  ################# Schedule
   #trigger
   path filter                    = {ClusterMTCCFilter}
   # monitor for every event the trigger decision
   path phltdqm                 = {SiStripMonitorHLT}
   #
   endpath e = {ClusterMTCCFilter,out} # save events in pool file
  }
