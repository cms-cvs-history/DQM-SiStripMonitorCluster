process SISTRIPDQM = {

// MessageLogger default configuration
include "FWCore/MessageLogger/data/MessageLogger.cfi"

// source of hits
	source = PoolSource { 
          untracked vstring fileNames = {'file:SingleMuonSimHits.root'}
          untracked int32 maxEvents = 1000
          untracked uint32 debugVebosity = 1
          untracked bool   debugFlag     = true
	}

// digitizer
include "SimTracker/SiStripDigitizer/data/SiStripDigi.cfi"

// clusterizer
include "RecoLocalTracker/SiStripClusterizer/data/SiStripClusterizer.cfi"


//
        es_source magfield = XMLIdealGeometryESSource {
                  FileInPath GeometryConfiguration ="Geometry/CMSCommonData/data/FieldConfiguration.xml"
                  #the proper root node is set in the xml file
                  string rootNodeName=""
                }
        es_module = VolumeBasedMagneticFieldESProducer {
                   double findVolumeTolerance = 0.0
                   untracked bool cacheLastVolume = true
                   untracked bool timerOn = false
                }
        es_source = XMLIdealGeometryESSource {
			FileInPath GeometryConfiguration="Geometry/TrackerSimData/data/trackerSimConfiguration.xml" 
			string rootNodeName = ""
			}

//
        es_module = TrackerGeometricDetESModule {}
        es_module = TrackerDigiGeometryESModule {}

// get SiStripFedCabling from sqlite_file
        es_source pool1 = PoolDBESSource {
                      VPSet toGet = {
                        { string record = "SiStripFedCablingRcd"
                          string tag = "SiStripFedCabling_v1"
                        }
                      }
                      bool loadAll = true
                      string connect = "sqlite_file:sistripfedcabling.db"
                      untracked string catalog = "file:SiStripFedCablingCatalog.xml"
                      string timetype = "runnumber"
                      untracked uint32 authenticationMethod = 1
                      untracked uint32 messagelevel = 10
                    }

// produce SiStripFecCabling and SiStripDetCabling out of SiStripFedCabling
        es_module sistripconn = SiStripConnectivity {}

//
       service = DaqMonitorROOTBackEnd{}

// tracer service - very verbose - useful for debugging only
//       service = Tracer { untracked string indention = "$$"}

// can comment out MonitorDeamon if you want to run without DQMCollector
       service = MonitorDaemon{
       # if true, will automatically start DQM thread in background
       untracked bool AutoInstantiate=true   
       # if >=0, upon a connection problem, the source will automatically 
       # attempt to reconnect with a time delay (secs) specified here 
       # (default: 5)
       untracked int32 reconnect_delay = 5
       # collector hostname; examples: localhost(default),lxcmse2.cern.ch, etc
       untracked string DestinationAddress = "localhost"
       # port for communicating with collector (default: 9090)
       untracked int32 SendPort = 9090
       # monitoring period in ms (i.e. how often monitoring elements 
       # are shipped to the collector; default: 1000)
       untracked int32 UpdateDelay = 1000
       # name of DQM source (default: DQMSource)
       untracked string NameAsSource = "FU0" 
       }

       module digimonitor = SiStripMonitorDigi {
                               // simulated digis
                               string DigiProducer="stripdigi" 
                               string DigiLabel="stripdigi"
                               // rest of parameters
                               bool ShowMechanicalStructureView = true
                               bool ShowReadoutView = false
                               bool ShowControlView = false
                               bool OutputMEsInRootFile = false
                               string OutputFileName="test_digi.root"
                            }

       module clustermonitor = SiStripMonitorCluster {
                               string ClusterProducer="ThreeThresholdClusterizer"
                               string ClusterLabel=""
                               //
                               bool ShowMechanicalStructureView = true
                               bool ShowReadoutView = false
                               bool ShowControlView = false
                               bool OutputMEsInRootFile = true
                               string OutputFileName="test_digi_cluster.root"
                               }

       module dump = EventContentAnalyzer {}

       path p = {stripdigi,ThreeThresholdClusterizer,digimonitor,clustermonitor}
}
